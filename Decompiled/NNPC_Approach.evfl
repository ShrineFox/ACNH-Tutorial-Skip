flow ApAlways():
	if MainNpc.CheckNpcApproachType():
		if EventFlowSystemActor.RandomChoiceExcludePrevious2(2, true) == 0:
			# Oh, hey… You got a sec? I was gonna tell you… Ummm… What was I gonna tell you?<10:4> I guess I forgot!
			MainNpc.OpenMessageWindow('TalkNNpc/B1_Bo/Approach/BO_ApproachA_Always:001', false)
		else:
			# Hey, so… Umm…I know I had something to say…buuuuuut… I forget what it was!
			MainNpc.OpenMessageWindow('TalkNNpc/B1_Bo/Approach/BO_ApproachA_Always:002', false)
	else:
		if EventFlowSystemActor.RandomChoiceExcludePrevious2(2, true) == 0:
			# I had something on my mind, but… I guess it slipped off!
			MainNpc.OpenMessageWindow('TalkNNpc/B1_Bo/Approach/BO_ApproachA_Always:003', false)
		else:
			# Oh! Hey there! I was so happy to see you, I forgot why I wanted to see you to begin with!
			MainNpc.OpenMessageWindow('TalkNNpc/B1_Bo/Approach/BO_ApproachA_Always:004', false)
	EventFlowSystemActor.ExitFlowchart()

flow ApGreeting():
	if MainNpc.NpcCheckPastDays('cGreeting', 14):
		run NNPC_ApproachB_Greeting::Root()
	else:
		run Reselection()

flow ApHabit():
	if (not MainNpc.NpcIsFleaHolder()) and (MainNpc.NpcCheckPastDays('cPhrase', 10)):
		run NNPC_ApproachB_Habit::Root()
	else:
		run Reselection()

flow ApNickname():
	switch MainNpc.NpcCanStartApBNickname():
		case 0:
			run NNPC_ApproachB_NickName::NewName()
		case 1:
			run NNPC_ApproachB_NickName::CopyName()
		case 2:
			run Reselection()

flow ApPresent():
	if EventFlowSystemActor.SystemHasBaggageSpace('cPocketBag') < 1:
		run Reselection()
	else:
		run NNPC_ApproachC_Present::Root()

flow ApSell():
	if EventFlowSystemActor.SystemHasBaggageSpace('cPocketBag') < 1:
		run Reselection()
	else:
		if System.EventFlags['cLand:RegulationType4']:
			if EventFlowSystemActor.HasBellCount(9500):
				run NNPC_ApproachC_Sell::Root()
			else:
				run Reselection()
		else:
			if EventFlowSystemActor.HasBellCount(8000):
				run NNPC_ApproachC_Sell::Root()
			else:
				run Reselection()

flow ApTrade():
	if MainNpc.HasNpcWantedItem():
		run NNPC_ApproachC_Trade::Root()
	else:
		run Reselection()

flow ApWant():
	if MainNpc.HasNpcWantedItem():
		run NNPC_ApproachC_Want::Root()
	else:
		run Reselection()

flow ApproachB_Chk():
	if EventFlowSystemActor.FlagSystemIntValue3(3, 'cPlayer:InputApproachBanCount') in (1, 2):
		run Reselection()

flow Reselection():
	if System.EventFlags['cPlayerTemp:NnpcApproachSelectCount'] < 3:
		System.EventFlags['cPlayerTemp:NnpcApproachSelectCount'] += 1
		switch MainNpc.CheckNpcFavorLevel():
			case 0:
				switch EventFlowSystemActor.RandomChoiceExcludePrevious9(9, true):
					case 0:
  run ApproachB_Chk()
	run ApGreeting()
					case 1:
  run ApproachB_Chk()
						run ApHabit()
					case 2:
  run ApproachB_Chk()
	run ApNickname()
					case 3:
						run ApSell()
					case 4, 5, 6:
						run ApPresent()
					case 7:
						run ApWant()
					case 8:
						run ApTrade()
				EventFlowSystemActor.ExitFlowchart()
			case 1:
				switch EventFlowSystemActor.RandomChoiceExcludePrevious9(9, true):
					case 0:
  run ApproachB_Chk()
	run ApGreeting()
					case 1:
  run ApproachB_Chk()
						run ApHabit()
					case 2:
  run ApproachB_Chk()
	run ApNickname()
					case 3:
						run ApSell()
					case 4:
						run ApPresent()
					case 5, 6:
						run ApWant()
					case 7, 8:
						run ApTrade()
				EventFlowSystemActor.ExitFlowchart()
			case 2:
				switch EventFlowSystemActor.RandomChoiceExcludePrevious6(6, true):
					case 0:
  run ApproachB_Chk()
	run ApNickname()
					case 1:
  run ApproachB_Chk()
						run ApHabit()
					case 2, 4:
						run ApSell()
					case 3, 5:
						run ApPresent()
				EventFlowSystemActor.ExitFlowchart()
			case 3:
				switch EventFlowSystemActor.RandomChoiceExcludePrevious3(3, true):
					case 0:
  run ApproachB_Chk()
	run ApNickname()
					case 1:
						run ApSell()
					case 2:
						run ApPresent()
				EventFlowSystemActor.ExitFlowchart()
			case 4, 5:
				run ApPresent()
				EventFlowSystemActor.ExitFlowchart()
	else:
		run ApAlways()

flow Root():
	if MainNpc.NpcCanStartQuest():
		switch MainNpc.NpcHaveQuestType(''):
			case 7, 0:
				run Sub_Event67()
			case 1:
				run NNPC_Quest_CatchFishInsect_Begin::Begin_Ap()
			case 2:
				run NNPC_Quest_LostProperty_Begin::Begin_Ap()
			case 3:
				run NNPC_Quest_Delivery_Begin::Begin_Ap()
			case 4:
				run NNPC_Quest_TreasureHunt_Begin::Begin_Ap()
			case 5:
				run NNPC_Quest_VisitN_Begin::Begin_Ap()
			case 6:
				run NNPC_Quest_VisitP_Begin::Begin_Ap()
	else:
		run Sub_Event67()

local flow Sub_Event67():
	System.EventFlags['cPlayerTemp:NnpcApproachSelectCount'] = 0
	run Reselection()
