flow AfterNet():
	run DateCheckWithSave()
	EventFlowSystemActor.TimeLock('cLock')
	run CallGrowUpGameWeatherProcess()
	EventFlowSystemActor.SaveGrowUp('cAfterNet')
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	EventFlowSystemActor.NetReceiveMail()
	run Save()
	EventFlowSystemActor.SpecialDemoStart('cReturnMulti')
	EventFlowSystemActor.ReserveSystemFlowDemo('System_Network', 'VisitEndMileGet', false, false, false)
	EventFlowSystemActor.SystemRequestChangeStage('cFrontOfAirPort', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)

flow BCATProcess():
	EventFlowSystemActor.SetBcatProcess()
	EventFlowSystemActor.NetConnectInit('cConnectInet', true)
	if not EventFlowSystemActor.CheckErrorType(2):
		EventFlowSystemActor.NetReceiveBcat()

flow CallGrowUpGameWeatherProcess():
	if EventFlowSystemActor.PassDaysSincePreviousGrowUp():
		run System_GrowUp_GameProcess::Root()
		run System_GrowUp_WeatherControl::FirstLive()
	else:
		if EventFlowSystemActor.BackDaysSincePreviousGrowUp():
			run System_GrowUp_GameProcess::Root_RewindDay()
	run System_GrowUp_WeatherControl::Always()

flow CallGrowUpPatchProcess():
	System.EventFlags['cLand:GrowUpAfterPatch1_1'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_2'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_3'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_4'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_5'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_6'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_7'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_8'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_9'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_10'] = true
	System.EventFlags['cLand:GrowUpAfterPatch1_11'] = true
	System.EventFlags['cLand:GrowUpAfterPatch2_0'] = true

flow Continue():
	run DateCheck()
	EventFlowSystemActor.TimeLock('cLock')
	run CallGrowUpGameWeatherProcess()
	run ContinueCommon()

flow ContinueCommon():
	run BCATProcess()
	EventFlowSystemActor.SaveGrowUp('cStart')
	run System_WherearenGrowUp::WherearenProcess()
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	run NSOProcess()
	run NSOOptimizeEnd()
	run Save()
	if not System.EventFlags['cPlayer:TownNewsReserve']:
		EventFlowSystemActor.SystemRequestChangeStage('cMainFieldPlayerHouse', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)
	elif (System.EventFlags['cLand:BuiltTownOffice']) and (not System.EventFlags['cLand:BuiltTownOfficeToday']):
		EventFlowSystemActor.SystemRequestChangeStage('cGrowUpTalk', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)
	else:
		EventFlowSystemActor.SystemRequestChangeStage('cGrowUpTalkEventPlaza', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)

flow DateCheck():
	if not EventFlowSystemActor.IsGamePlayTime():
		run System_DateTimeNg::NoSave()

flow DateCheckWithSave():
	if not EventFlowSystemActor.IsGamePlayTime():
		run System_DateTimeNg::Root()

flow InGame():
	run DateCheckWithSave()
	EventFlowSystemActor.TimeLock('cLock')
	run CallGrowUpGameWeatherProcess()
	run BCATProcess()
	run NSOOptimizeBegin()
	EventFlowSystemActor.SaveGrowUp('cInGame')
	run System_WherearenGrowUp::WherearenProcess()
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	run NSOProcess()
	run NSOOptimizeEnd()
	run Save()
	if (not System.EventFlags['cLand:BuiltTownOffice']) or (System.EventFlags['cLand:BuiltTownOfficeToday']):
		EventFlowSystemActor.OverWriteFadeSetting('cNormalFader', 'cCircle', 'cBlack', 1.0, 1.0)
	EventFlowSystemActor.SaveAfterGrowUp()

flow IsJoinNSO():
	EventFlowSystemActor.CheckAoCWithEnsureNSO('AOC_EventFlag_001', 'AOC_EventFlag_002', false, true)

flow NSOOptimizeBegin():
	if (EventFlowSystemActor.GrowUpInterval(1)) and (not EventFlowSystemActor.GrowUpInterval(2)):
		System.EventFlags['cPlayerTemp:GrowupNsoServerOptimization'] = true

flow NSOOptimizeEnd():
	System.EventFlags['cPlayerTemp:GrowupNsoServerOptimization'] = false

flow NSOProcess():
	EventFlowSystemActor.NetConnectInit('cConnectInet', true)
	if not EventFlowSystemActor.CheckErrorType(2):
		EventFlowSystemActor.NetCheckNSA('cCheckNSA', true)
		run IsJoinNSO()
		if (not EventFlowSystemActor.CheckErrorType(2)) and (EventFlowSystemActor.NetHasPOPID(true)):
			EventFlowSystemActor.NetGetPOPID(true)
			if (not EventFlowSystemActor.CheckErrorType(2)) and (EventFlowSystemActor.NetHasPOPID(false)):
				EventFlowSystemActor.NetUpdateFriendList('cBestFriend')
				EventFlowSystemActor.NetReceiveMail()
				EventFlowSystemActor.NetUpdateFriendLandWithInterval(1)
				run System_ServerRegistration::UploadProfileCorerun System_ServerRegistration::UploadProfileCore(IgnoreError=true, Terminate=false)
				EventFlowSystemActor.NetUploadEmoticon(true, 10, true)
				EventFlowSystemActor.NetUploadCatalog(false, true)
				EventFlowSystemActor.NetUploadRewardUnlock(true, true)
				EventFlowSystemActor.NetUploadResortUnlock(false, true)
				EventFlowSystemActor.NetUploadLifeTips(false, true)
				EventFlowSystemActor.NetUploadPlayerMemories(false, true)
				run System_ServerRegistration::UploadResortProfilerun System_ServerRegistration::UploadResortProfile(IgnoreError=true, Terminate=false)

flow NSO_HomeLandCheck():
	return

flow NewGame():
	run DateCheck()
	if EventFlowSystemActor.PassDaysSincePreviousGrowUp():
		run System_GrowUp_GameProcess::Root()
	run System_GrowUp_GameProcess::FirstDay()
	run System_GrowUp_WeatherControl::FirstDay()
	EventFlowSystemActor.SaveGrowUp('cStart')
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	EventFlowSystemActor.SystemRequestChangeStage('cMainFieldDemoLanding', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)

flow PlayerSwitch():
	EventFlowSystemActor.ReserveSystemFlowDemo('System_GrowUp', 'PostPlayerSwitch', false, false, false)
	run DateCheckWithSave()
	EventFlowSystemActor.TimeLock('cLock')
	run CallGrowUpGameWeatherProcess()
	if not EventFlowSystemActor.IsSharePlay(0):
		EventFlowSystemActor.UnmountAoC()
	EventFlowSystemActor.SetupSharePlay(false)

flow PostPlayerSwitch():
	if not EventFlowSystemActor.IsSharePlay(0):
		EventFlowSystemActor.MountAoC()
	run Save()
	EventFlowSystemActor.SaveSimpleLoad('cAll')
	EventFlowSystemActor.SaveGrowUp('cInGame')
	run System_WherearenGrowUp::WherearenProcess()
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	if not EventFlowSystemActor.IsSharePlay(0):
		EventFlowSystemActor.NetUpdateFriendList('cBestFriend')
		EventFlowSystemActor.NetReceiveMail()
	run Save()
	EventFlowSystemActor.DemoSetShareStartFlag()
	EventFlowSystemActor.ReserveSystemFlowDemo('System_SharePlay_Controller', 'Root', false, false, false)
	if EventFlowSystemActor.IsSharePlay(0):
		EventFlowSystemActor.SystemRequestChangeStage('cEventPlaza', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)
	else:
		EventFlowSystemActor.SystemRequestChangeStage('cMainFieldPlayerHouse', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)

flow Save():
	EventFlowSystemActor.UISaveIconAppear()
	EventFlowSystemActor.SaveSimpleSave('cAll')
	EventFlowSystemActor.UISaveIconDisappear()

flow SharePlayForceBreakup():
	EventFlowSystemActor.SaveSimpleLoad('cAll')
	System.EventFlags['cPlayer:EquipLicenseHelmet'] = false
	EventFlowSystemActor.ReserveSystemFlowDemo('System_GrowUp', 'PostPlayerSwitch', false, false, false)
	run DateCheckWithSave()
	EventFlowSystemActor.TimeLock('cLock')
	run CallGrowUpGameWeatherProcess()
	EventFlowSystemActor.SetupSharePlay(true)

flow Title():
	run DateCheck()
	EventFlowSystemActor.TimeLock('cUpdateAndLock')
	if not EventFlowSystemActor.IsDoneBcatProcess():
		run BCATProcess()
	run CallGrowUpGameWeatherProcess()
	EventFlowSystemActor.SaveGrowUp('cTitle')
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	if EventFlowSystemActor.PlayAccountIsPlayerVillager():
		EventFlowSystemActor.SystemRequestChangeStage('cTitle', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)
	else:
		EventFlowSystemActor.SystemRequestChangeStage('cDateCheck', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)

flow TitleAfterSharePlay():
	run DateCheck()
	EventFlowSystemActor.TimeLock('cUpdateAndLock')
	EventFlowSystemActor.MountAoC()
	run CallGrowUpGameWeatherProcess()
	EventFlowSystemActor.SaveGrowUp('cTitle')
	run CallGrowUpPatchProcess()
	EventFlowSystemActor.TimeLock('cUnlock')
	EventFlowSystemActor.SystemRequestChangeStage('cTitle', 'cCircle', 'cCircle', 'cBlack', 1.0, 1.0)
